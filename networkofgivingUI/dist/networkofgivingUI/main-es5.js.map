{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/activity/activity.component.ts","webpack:///src/app/activity/activity.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/charities/charities.component.ts","webpack:///src/app/charities/charities.component.html","webpack:///src/app/charities/charity-details/charity-details.component.ts","webpack:///src/app/charities/charity-details/charity-details.component.html","webpack:///src/app/charities/charity/charity.component.ts","webpack:///src/app/charities/charity/charity.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/my-profile-page/my-profile-page.component.ts","webpack:///src/app/my-profile-page/my-profile-page.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/pipes/search.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActivityComponent","router","navigate","transaction","charity","queryParams","toHomePage","selector","templateUrl","styleUrls","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","auth","AppComponent","title","AppModule","declarations","providers","bootstrap","AuthGuard","authService","route","state","isAuthenticated","isAuth","providedIn","CharitiesComponent","httpService","http","searchString","showModalClause","fileIsSet","submitted","responseText","alertIsClosed","isDonationAndParticipantsUnset","params","subscribe","snapshot","queryParamMap","get","getCharities","fileIsCorrect","form","required","minLength","maxLength","uniqTitle","bind","description","donationRequired","participantsRequired","charities","control","body","set","value","post","pipe","response","err","file","type","match","formData","data","JSON","stringify","addCharity","message","reset","setFile","close","submit","CharityDetailsComponent","service","donateModalIsOpen","volunteerModalIsOpen","deleteModalIsOpen","checkOwner","checkIfVolunteer","getParamsFromUrl","toProfilePage","backRoute","ownedByCurrentCustomer","charityOwnCurrentCustomer","currentCustomerVolunteerCharityById","recommendedAmountOfDonate","amountOfDonate","getCharity","checkIfCurrentUserOwnThisCharity","checkIfCurrentUserVolunteerThisCharity","checkAmountForDonate","error","donate","amount","donationAmount","responseMessage","volunteer","deleted","CharityComponent","url","goToDetailsPage","LoginComponent","isError","username","password","login","MyProfilePageComponent","ownedActive","donatesActive","volunteerActive","activitiesActive","inProcessActive","completedActive","getAllInfoAboutCustomer","customerInfo","profileInfo","getVolunteers","getDonates","getOwned","getTransactions","getCharitiesInProcess","getCharitiesCompleted","getCharitiesCurrentCustomerIsVolunteer","length","charitiesVolunteer","getCharitiesCurrentCustomerDonater","charitiesDonates","getCharitiesCurrentCustomerOwner","charitiesOwned","transactions","getCurrentCustomerCharitiesByStatus","charitiesInProcess","charitiesCompleted","RegistrationComponent","serverIsDisabled","uniqUsername","name","age","min","max","gender","location","registerCustomer","AuthService","logoutModalIsOpen","errorMessage","currentCustomerUsername","loginCustomer","localStorage","setItem","token","userResponse","handleError","HttpService","customer","headers","status","info","parse","getItem","httpOptions","FormData","append","charityId","SearchPipe","search","trim","filter","toLowerCase","includes","environment","production","bootstrapModule","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAG;;AACD;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAW;;AACjD;;AACF;;;;;;AAHK;;AAAA;;;;QDQQC,iB;AAKX,iCAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;eAED,oBAAQ,CACP;;;eAED,2BAAkB;AAEhB,eAAKA,MAAL,CAAYC,QAAZ,CAAqB,CAAC,gBAAgB,KAAKC,WAAL,CAAiBC,OAAjB,CAAyBL,EAA1C,CAArB,EAAoE;AAClEM,uBAAW,EAAE;AACXC,wBAAU,EAAE;AADD;AADqD,WAApE;AAMD;;;;;;;uBAnBUN,iB,EAAiB,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,yC;AAAA;AAAA;ACT9B;;;;AAAK;;;;;;;;;sEDSQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTO,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;gBAE3B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE;AAA/B,KADqB,EAErB;AAACD,UAAI,EAAE,cAAP;AAAuBC,eAAS,EAAE;AAAlC,KAFqB,EAGrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAACD,UAAI,EAAE,eAAP;AAAwBC,eAAS,EAAE;AAAnC,KAJqB,EAKrB;AACED,UAAI,EAAE,SADR;AACmBC,eAAS,EAAE,iGAD9B;AACsDC,iBAAW,EAAE,CAAC,qDAAD,CADnE;AACgFC,cAAQ,EAAE,CACtF;AAACH,YAAI,EAAE,YAAP;AAAqBC,iBAAS,EAAE;AAAhC,OADsF;AAD1F,KALqB,EAUrB;AAACD,UAAI,EAAE,IAAP;AAAaI,gBAAU,EAAE,YAAzB;AAAuCC,eAAS,EAAE;AAAlD,KAVqB,CAAvB;;QAiBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBR,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBO,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBR,MAArB,CAAD,CADD;AAERZ,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC3B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACQM;;AAA4E;;AAAK;;;;AAAzD;;;;;;;;;;AACxB;;AAAmF;;AAAY;;;;AAAvE;;;;;;;;;;;;AACxB;;AACE;;AACE;;AACA;;AAAuB;;AAAgC;;AACzD;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,iBAAS,OAAAsB,IAAA,gBAAT;AAA6B,SAA7B;;AAA+B;;AAAM;;AAC3D;;;;;;AALK;;AAAA;;AAEsB;;AAAA;;;;;;;;QDLpBC,Y,6BAGX,sBAAmBD,IAAnB,EAAsC;AAAA;;AAAnB,WAAAA,IAAA,GAAAA,IAAA;AAFnB,WAAAE,KAAA,GAAQ,mBAAR;AAGC,K;;;uBAJUD,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,6oB;AAAA;AAAA;ACRzB;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAS;;AAC/B;;AACF;;AACA;;AACE;;AACA;;AACA;;AAOF;;AACF;;AACA;;AACE;;AAEE;;AAEF;;AACF;;AACF;;AAGA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAa;;AACrC;;AACE;;AAA8C;AAAA,gDAAkC,KAAlC;AAAuC,WAAvC;;AAAyC;;AAAM;;AAC7F;;AAA8C;AAAA,mBAAS,IAAAD,IAAA,SAAT;AAAsB,WAAtB;;AAAwB;;AAAE;;AAC1E;;AACF;;;;AAhCS;;AAAA;;AAKA;;AAAA;;AACA;;AAAA;;AACE;;AAAA;;AAmBA;;AAAA,+GAAyC,wBAAzC,EAAyC,KAAzC;;;;;;;;;sEDrBEC,Y,EAAY;cALxB,uDAKwB;eALd;AACTd,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0Cac,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,4FAJO,EAKP,0DALO,EAMP,kEANO,EAOP,qEAPO,CASI;;;;0HAGFA,S,EAAS;AAAA,uBAtBlB,2DAsBkB,EArBlB,0FAqBkB,EApBlB,qEAoBkB,EAnBlB,kFAmBkB,EAlBlB,sFAkBkB,EAjBlB,6GAiBkB,EAhBlB,uEAgBkB,EAflB,kGAekB,EAdlB,+EAckB;AAdD,kBAGjB,uEAHiB,EAIjB,oEAJiB,EAKjB,0DALiB,EAMjB,4FANiB,EAOjB,0DAPiB,EAQjB,kEARiB,EASjB,qEATiB;AAcC,O;AALF,K;;;;;sEAKPA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,0FAFY,EAGZ,qEAHY,EAIZ,kFAJY,EAKZ,sFALY,EAMZ,6GANY,EAOZ,uEAPY,EAQZ,kGARY,EASZ,+EATY,CADN;AAYRL,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,4FAJO,EAKP,0DALO,EAMP,kEANO,EAOP,qEAPO,CAZD;AAqBRM,mBAAS,EAAE,EArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD;AAtBH,S;AAwBY,Q;;;;;;;;;;;;;;;;;;ACxCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaC,S;AAEX,yBAAoBC,WAApB,EAAsD3B,MAAtD,EAAsE;AAAA;;AAAlD,aAAA2B,WAAA,GAAAA,WAAA;AAAkC,aAAA3B,MAAA,GAAAA,MAAA;AACrD;;;;eAED,qBACE4B,KADF,EAEEC,KAFF,EAE4B;AAAA;;AAG1B,iBAAO,KAAKF,WAAL,CAAiBG,eAAjB,GAAmCvC,IAAnC,CAAwC,UAAAwC,MAAM,EAAI;AACvD,gBAAIA,MAAJ,EAAY;AACV,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,mBAAI,CAAC/B,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB,EACE;AACEG,2BAAW,EAAE;AACXe,sBAAI,EAAE;AADK;AADf,eADF;AAMD;AACF,WAXM,CAAP;AAYD;;;;;;;uBAtBUO,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBADG;;;;;sEACZA,S,EAAS;cADrB,wDACqB;eADV;AAACM,oBAAU,EAAE;AAAb,S;AACU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBE;;AACE;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAc;;AAChF;;;;;;AAIA;;;;;;AAEa;;;;;;AAaL;;AAA4C;;AAAwB;;;;;;AACpE;;AAA2D;;AAE3D;;;;;;AAF2D;;AAAA;;;;;;AAG3D;;AAA2D;;AAE3D;;;;;;AAF2D;;AAAA;;;;;;AAG3D;;AAA6C;;AAC7C;;;;;;AAGF;;AAA2C;;AAAI;;AAA+C;;;;;;AAI5F;;AAA4C;;AAAwB;;;;;;AACpE;;AAA2D;;AAE3D;;;;;;AAF2D;;AAAA;;;;;;AAqBjE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAoD;;AAAI;;AAC1D;;AACF;;AACF;;;;QDtESC,kB;AAEX,kCAAoBL,KAApB,EAAmDM,WAAnD,EAAqFC,IAArF,EAA+GnC,MAA/G,EAAsImB,IAAtI,EAAyJ;AAAA;;AAArI,aAAAS,KAAA,GAAAA,KAAA;AAA+B,aAAAM,WAAA,GAAAA,WAAA;AAAkC,aAAAC,IAAA,GAAAA,IAAA;AAA0B,aAAAnC,MAAA,GAAAA,MAAA;AAAuB,aAAAmB,IAAA,GAAAA,IAAA;AAItI,aAAAiB,YAAA,GAAe,EAAf;AACA,aAAAC,eAAA,GAAkB,KAAlB;AAIA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,YAAA,GAAe,EAAf;AACA,aAAAC,aAAA,GAAgB,IAAhB;AACA,aAAAC,8BAAA,GAAiC,KAAjC;AAZC;;;;eAcD,oBAAQ;AAAA;;AACN,eAAKd,KAAL,CAAWe,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAC9C,kBAAI,CAACH,YAAL,GAAoB,MAAI,CAACZ,KAAL,CAAWiB,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,SAAtC,CAApB;;AACA,gBAAI,MAAI,CAACP,YAAT,EAAuB;AACrB,oBAAI,CAACC,aAAL,GAAqB,KAArB;;AACA,oBAAI,CAACzC,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;AACF,WAND;AAQA,eAAK+C,YAAL;AAEA,eAAKC,aAAL,GAAqB,IAArB;AAEA,eAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB7B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW8B,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EACzB,0DAAWC,SAAX,CAAqB,EAArB,CADyB,CAApB,EACsB,CAAC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAD,CADtB,CADiB;AAGxBC,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWL,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,GAArB,CAAtB,CAApB,CAHW;AAIxBI,4BAAgB,EAAE,IAAI,0DAAJ,EAJM;AAKxBC,gCAAoB,EAAE,IAAI,0DAAJ;AALE,WAAd,CAAZ;AAOD;;;eAED,wBAAe;AAAA;;AACb,eAAKC,SAAL,GAAiB,IAAjB;AACA,eAAKzB,WAAL,CAAiBc,YAAjB,GAAgCJ,SAAhC,CAA0C,UAACe,SAAD,EAA0B;AAClE,kBAAI,CAACA,SAAL,GAAiBA,SAAjB;AACD,WAFD;AAGD;;;eAED,mBAAUC,OAAV,EAA8B;AAC5B,cAAIC,IAAI,GAAG,IAAI,+DAAJ,EAAX;AACAA,cAAI,GAAGA,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBF,OAAO,CAACG,KAA1B,CAAP;AACA,iBAAO,KAAK5B,IAAL,CAAU6B,IAAV,CAAwB,8CAAxB,EAAwEH,IAAxE,EAA8EI,IAA9E,CAAmF,2DAAI,UAACC,QAAD,EAAc;AAC1G,gBAAIA,QAAJ,EAAc;AACZ,qBAAO;AAACZ,yBAAS,EAAE;AAAZ,eAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF,WANyF,CAAnF,EAMH,kEAAW,UAAAa,GAAG,EAAI;AACpB,mBAAO,wDAAWA,GAAX,CAAP;AACD,WAFG,CANG,CAAP;AASD;;;eAED,+BAAsB;AACpB,eAAK9B,eAAL,GAAuB,IAAvB;AACD;;;eAED,iBAAQ+B,IAAR,EAAkB;AAChB,cAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,IAAN,CAAWC,KAAX,CAAiB,SAAjB,MAA+BF,IAAI,IAAI,IAA3C,EAAiD;AAC/C,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKnB,aAAL,GAAqB,IAArB;AACA,iBAAKX,SAAL,GAAiB,IAAjB;AACD,WAJD,MAIO;AACL,iBAAKW,aAAL,GAAqB,KAArB;AACD;AACF;;;eAED,kBAAS;AAAA;;AACP,eAAKV,SAAL,GAAiB,IAAjB;AACA,cAAMgC,QAAQ,GAAG,MAAH,OAAG,CAAH,EAAG,EAAI,KAAKrB,IAAL,CAAUa,KAAd,CAAjB;;AAEA,cAAI,CAACQ,QAAQ,CAACd,gBAAV,IAA8B,CAACc,QAAQ,CAACb,oBAA5C,EAAkE;AAChE,iBAAKhB,8BAAL,GAAsC,IAAtC;AACA,iBAAKH,SAAL,GAAiB,KAAjB;AACD,WAHD,MAGO;AACL,gBAAMiC,IAAI,GAAWC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAArB;AAEA,iBAAKrC,WAAL,CAAiByC,UAAjB,CAA4BH,IAA5B,EAAkC,KAAKJ,IAAvC,EAA6CxB,SAA7C,CACE,UAACsB,QAAD,EAAc;AACZ,oBAAI,CAACxB,8BAAL,GAAsC,KAAtC;AACA,oBAAI,CAACL,eAAL,GAAuB,KAAvB;;AACA,oBAAI,CAACW,YAAL;;AACA,oBAAI,CAACR,YAAL,GAAoB0B,QAAQ,CAACU,OAA7B;AACA,oBAAI,CAACnC,aAAL,GAAqB,KAArB;AACA,oBAAI,CAACF,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAACW,IAAL,CAAU2B,KAAV;AACD,aATH;AAWD;AACF;;;eAED,iBAAQ;AACN,eAAKxC,eAAL,GAAuB,KAAvB;AACA,eAAKa,IAAL,CAAU2B,KAAV;AACD;;;;;;;uBArGU5C,kB,EAAkB,+H,EAAA,mI,EAAA,gI,EAAA,uH,EAAA,mI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,c;AAAA,gvD;AAAA;AAAA;ACf/B;;AAAW;AAAA;AAAA;;AACT;;AACM;;AACI;;AACJ;;AACN;;AACF;;AAGA;;AACE;;AACE;;AACE;;AACE;;AAA0D;AAAA;AAAA;;AAA1D;;AAEF;;AACF;;AACF;;AACA;;AAGF;;AAEA;;AACE;;;;AAIF;;AAGA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAkB;;AAC1C;;AACE;;AACE;;AACE;;AACE;;AAAO;;AAAK;;AACZ;;AACA;;AACA;;AAGA;;AAGA;;AAEF;;AACA;;AAAgD;AAAA,mBAAU,IAAA6C,OAAA,qBAA4B,CAA5B,EAAV;AAAyC,WAAzC;;AAAhD;;AACA;;AACA;;AACE;;AAAO;;AAAW;;AAClB;;AACA;;AACA;;AAGF;;AACA;;AACE;;AAAO;;AAAiB;;AACxB;;AACA;;AAAoB;;AACpB;;AACA;;AAAmB;;AAAwB;;AAC7C;;AACA;;AACE;;AAAO;;AAAoB;;AAC3B;;AAEA;;AAAoB;;AACpB;;AACA;;AAAmB;;AAAwB;;AAC7C;;AACF;;AACF;;AACA;;AAUF;;AACA;;AACE;;AAA8C;AAAA,mBAAS,IAAAC,KAAA,EAAT;AAAgB,WAAhB;;AAAmB;;AAAM;;AACvE;;AAEQ;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAC3B;;AACF;;AACA;;AAEF;;;;AAhGW,wGAAkC,cAAlC,EAAkC,SAAlC;;AAGC;;AAAA;;AAUsD;;AAAA;;AAK3D;;AAAA;;AAOQ;;AAAA;;AAMJ;;AAAA,wGAAkC,kBAAlC,EAAkC,KAAlC;;AAGa;;AAAA;;AAKK;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIf;;AAAA;;AAIe;;AAAA;;AACA;;AAAA;;AAqBpB;;AAAA;;AAcG;;AAAA;;;;;;;;;;sED3EC/C,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT3B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCM;;AAAiE;;AACI;;;;;;AADJ;;AAAA;;;;;;AAEjE;;AAAyE;;AACO;;;;;;AADP;;AAAA;;;;;;AAGzE;;AAAwB;;AAA8C;;;;;;;;AAEpE;;AACE;;AAAG;;AAAwF;;AAC3F;;AAAgC;AAAA;;AAAA;;AAAA,4CAA6B,IAA7B;AAAiC,SAAjC;;AAAmC;;AAAc;;AACnF;;;;;;;;AAEE;;AAAsE;AAAA;;AAAA;;AAAA,6CAA6B,IAA7B;AAAiC,SAAjC;;AACpE;;AACF;;;;;;;;AACA;;AACQ;AAAA;;AAAA;;AAAA,gDAAgC,IAAhC;AAAoC,SAApC;;AAAsC;;AAC9C;;;;;;AACA;;AAA4B;;AAA4C;;;;;;AAP1E;;AACE;;AAGA;;AAGA;;AACF;;;;;;AAPU;;AAAA;;AAGA;;AAAA;;AAGL;;AAAA;;;;;;AAEL;;AAAyF;;AAC/E;;AAAQ;;AAAuB;;AAAS;;;;;;AAAhC;;AAAA;;;;;;AAfpB;;AACE;;AAIA;;AASA;;AAEF;;;;;;AAfO;;AAAA;;AAIA;;AAAA;;AASF;;AAAA;;;;;;;;AA5CX;;AACE;;AACE;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACvC;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAiB;;AACtB;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEA;;AAGA;;AACA;;AAiBF;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAuB;;AAC5B;;AACF;;AACF;;;;;;AA9CS;;AAAA;;AASU;;AAAA;;AAOV;;AAAA;;AAEA;;AAAA;;AAGA;;AAAA;;AACE;;AAAA;;AAqBF;;AAAA;;;;QDhDIyE,uB;AAiBX,uCAAoBrD,KAApB,EAAmDsD,OAAnD,EAAgF/D,IAAhF,EAA2GnB,MAA3G,EAA2H;AAAA;;AAAvG,aAAA4B,KAAA,GAAAA,KAAA;AAA+B,aAAAsD,OAAA,GAAAA,OAAA;AAA6B,aAAA/D,IAAA,GAAAA,IAAA;AAA2B,aAAAnB,MAAA,GAAAA,MAAA;AAd3G,aAAAmF,iBAAA,GAAoB,KAApB;AAEA,aAAAC,oBAAA,GAAuB,KAAvB;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,UAAA,GAAa,IAAb;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAhD,SAAA,GAAY,KAAZ;AAEA,aAAAE,aAAA,GAAgB,IAAhB;AAOC;;;;eAGD,oBAAQ;AAAA;;AACN,eAAK+C,gBAAL;AAEA,eAAK5D,KAAL,CAAWxB,WAAX,CAAuBwC,SAAvB,CAAiC,UAACD,MAAD,EAAoB;AACnD,kBAAI,CAACtC,UAAL,GAAkBsC,MAAM,CAACtC,UAAzB;AACA,kBAAI,CAACoF,aAAL,GAAqB9C,MAAM,CAAC8C,aAA5B;;AACA,gBAAI,MAAI,CAACpF,UAAT,EAAqB;AACnB,oBAAI,CAACqF,SAAL,GAAiB,MAAI,CAACrF,UAAtB;AACD,aAFD,MAEO,IAAI,MAAI,CAACoF,aAAT,EAAwB;AAC7B,oBAAI,CAACC,SAAL,GAAiB,MAAI,CAACD,aAAtB;AACD;AACF,WARD;AASD;;;eAED,4CAAmC;AAAA;;AACjC,cAAI,KAAKtF,OAAT,EAAkB;AAChB,iBAAK+E,OAAL,CAAaS,sBAAb,CAAoC,KAAKxF,OAAL,CAAaL,EAAjD,EAAqD8C,SAArD,CACE,UAACsB,QAAD,EAAc;AACZ,kBAAIA,QAAJ,EAAc;AACZ,sBAAI,CAAC0B,yBAAL,GAAiC,IAAjC;AACD,eAFD,MAEO;AACL,sBAAI,CAACA,yBAAL,GAAiC,KAAjC;AACD;AACF,aAPH;AASD;AACF;;;eAED,kDAAyC;AAAA;;AACvC,cAAI,KAAKzF,OAAT,EAAkB;AAChB,iBAAK+E,OAAL,CAAaW,mCAAb,CAAiD,KAAK1F,OAAL,CAAaL,EAA9D,EAAkE8C,SAAlE,CACE,UAACsB,QAAD,EAAc;AACZ,kBAAIA,QAAJ,EAAc;AACZ,sBAAI,CAACqB,gBAAL,GAAwB,IAAxB;AACD,eAFD,MAEO;AACL,sBAAI,CAACA,gBAAL,GAAwB,KAAxB;AACD;AACF,aAPH;AAQD;AACF;;;eAED,gCAAuB;AAAA;;AACrB,cAAI,KAAKpF,OAAT,EAAkB;AAChB,iBAAK+E,OAAL,CAAaY,yBAAb,CAAuC,KAAK3F,OAAL,CAAaL,EAApD,EAAwD8C,SAAxD,CAAkE,UAACsB,QAAD,EAAc;AAC9E,oBAAI,CAAC6B,cAAL,GAAsB7B,QAAtB;AACD,aAFD;AAGD;AACF;;;eAED,4BAAmB;AAAA;;AACjB,eAAKtC,KAAL,CAAWe,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAE9C,kBAAI,CAACuC,OAAL,CAAac,UAAb,CAAwB,CAACrD,MAAM,CAAC7C,EAAhC,EACG8C,SADH,CACa,UAACzC,OAAD,EAAa;AACpB,oBAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,kBAAI,MAAI,CAACgB,IAAL,CAAUY,MAAV,IAAoB,MAAI,CAACuD,UAA7B,EAAyC;AACvC,sBAAI,CAACW,gCAAL;AACD;;AACD,kBAAI,MAAI,CAAC9E,IAAL,CAAUY,MAAV,IAAoB,CAAC,MAAI,CAACwD,gBAA9B,EAAgD;AAC9C,sBAAI,CAACW,sCAAL;AACD;;AACD,kBAAI,MAAI,CAAC/E,IAAL,CAAUY,MAAV,IAAoB,MAAI,CAAC5B,OAAL,CAAasD,gBAArC,EAAuD;AACrD,sBAAI,CAAC0C,oBAAL;AACD;AACF,aAZL,EAaI,UAACC,KAAD,EAAW,CACV,CAdL;AAeD,WAjBD;AAkBD;;;eAED,kBAAS;AAAA;;AACP,eAAK7D,SAAL,GAAiB,IAAjB;AACA,cAAM8D,MAAM,GAAW;AACrBvG,cAAE,EAAE,KAAKK,OAAL,CAAaL,EADI;AAErBwG,kBAAM,EAAE,KAAKC;AAFQ,WAAvB;AAKA,eAAKrB,OAAL,CAAamB,MAAb,CAAoBA,MAApB,EAA4BzD,SAA5B,CAAsC,UAACsB,QAAD,EAAc;AAClD,mBAAI,CAACoB,UAAL,GAAkB,KAAlB;AACA,mBAAI,CAACH,iBAAL,GAAyB,KAAzB;AACA,mBAAI,CAAC1C,aAAL,GAAqB,KAArB;AACA,mBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACiE,eAAL,GAAuBtC,QAAQ,CAACU,OAAhC;;AACA,mBAAI,CAACY,gBAAL;AACD,WAPD;AAQD;;;eAED,qBAAY;AAAA;;AACV,eAAKjD,SAAL,GAAiB,IAAjB;AACA,eAAK2C,OAAL,CAAauB,SAAb,CAAuB,KAAKtG,OAAL,CAAaL,EAApC,EAAwC8C,SAAxC,CAAkD,UAACsB,QAAD,EAAc;AAC9D,mBAAI,CAACoB,UAAL,GAAkB,KAAlB;AACA,mBAAI,CAACF,oBAAL,GAA4B,KAA5B;AACA,mBAAI,CAACG,gBAAL,GAAwB,IAAxB;AACA,mBAAI,CAAC9C,aAAL,GAAqB,KAArB;AACA,mBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACiE,eAAL,GAAuBtC,QAAQ,CAACU,OAAhC;;AACA,mBAAI,CAACY,gBAAL;AACD,WARD;AASD;;;eAED,mBAAS;AAAA;;AACP,eAAKjD,SAAL,GAAiB,IAAjB;AACA,eAAK2C,OAAL,WAAoB,KAAK/E,OAAL,CAAaL,EAAjC,EAAqC8C,SAArC,CAA+C,UAACsB,QAAD,EAAc;AAC3D,mBAAI,CAAC3B,SAAL,GAAiB,KAAjB;;AACA,mBAAI,CAACvC,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB,EACE;AACEG,yBAAW,EAAE;AACXsG,uBAAO,EAAExC,QAAQ,CAACU;AADP;AADf,aADF;AAMD,WARD;AASD;;;eAED,wBAAe;AACb,cAAI,KAAKc,SAAL,KAAmB,aAAvB,EAAsC;AACpC,iBAAK1F,MAAL,CAAYC,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD,WAFD,MAEO;AACL,iBAAKD,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;AACF;;;;;;;uBA5IUgF,uB,EAAuB,+H,EAAA,mI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,c;AAAA,m2B;AAAA;AAAA;ACXpC;;AAAW;AAAA;AAAA;;AACT;;AACM;;AACI;;AACJ;;AACN;;AACF;;AAEA;;AAyDA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAiB;;AACzC;;AACE;;AACE;;AAAO;;AAAgB;;AACvB;;AAAmE;AAAA;AAAA;;AAAnE;;AACF;;AACF;;AACA;;AACE;;AAA8C;AAAA,oCAA6B,KAA7B;AAAoC,mBAAF,qBAAwB,IAAtB;AAA0B,WAA9D;;AAC5C;;AACF;;AACA;;AAAqE;AAAA,mBAAS,IAAAoB,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAE;;AAC5F;;AACF;;AAGA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAqB;;AAC7C;;AACE;;AAA8C;AAAA,8CAAgC,KAAhC;AAAqC,WAArC;;AAAuC;;AAAM;;AAC3F;;AAAqE;AAAA,mBAAS,IAAAI,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAE;;AAC/F;;AACF;;AAGA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAa;;AACrC;;AACE;;AAA8C;AAAA,2CAA6B,KAA7B;AAAkC,WAAlC;;AAAoC;;AAAM;;AACxF;;AAAqE;AAAA,mBAAS,eAAT;AAAiB,WAAjB;;AAAmB;;AAAE;;AAC5F;;AACF;;;;AAjGW,wGAAkC,cAAlC,EAAkC,SAAlC;;AAGC;;AAAA;;AAKP;;AAAA;;AAyDM;;AAAA;;AAK8D;;AAAA;;AAOvB;;AAAA;;AAKvC;;AAAA,6GAAuC,wBAAvC,EAAuC,KAAvC;;AAIuC;;AAAA;;AAKvC;;AAAA,0GAAoC,wBAApC,EAAoC,KAApC;;AAIuC;;AAAA;;;;;;;;;sEDpFrCxB,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT3E,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWI;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDNOmG,gB;AAKX,gCAAoB3G,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;eAED,oBAAQ,CACP;;;eAED,2BAAkB;AAChB,cAAI,KAAKA,MAAL,CAAY4G,GAAZ,KAAoB,YAAxB,EAAsC;AACpC,iBAAK5G,MAAL,CAAYC,QAAZ,CAAqB,CAAC,gBAAgB,KAAKE,OAAL,CAAaL,EAA9B,CAArB,EAAwD;AACtDM,yBAAW,EAAE;AACXC,0BAAU,EAAE;AADD;AADyC,aAAxD;AAKD,WAND,MAMO;AACL,iBAAKL,MAAL,CAAYC,QAAZ,CAAqB,CAAC,gBAAgB,KAAKE,OAAL,CAAaL,EAA9B,CAArB,EAAwD;AACtDM,yBAAW,EAAE;AACXqF,6BAAa,EAAE;AADJ;AADyC,aAAxD;AAKD;AACF;;;;;;;uBAzBUkB,gB,EAAgB,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,sO;AAAA;AAAA;ACT7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AAGA;;AAGA;;AACE;;AAAoC;AAAA,mBAAS,IAAAE,eAAA,EAAT;AAA0B,WAA1B;;AAA4B;;AAAW;;AAC7E;;AACF;;AApBF;;;;AAEI;;AAAA;;AAIO;;AAAA;;AAGL;;AAAA;;AAEG;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDLIF,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTrG,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;gBAE1B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSQ;;AAA4C;;AAAwB;;;;;;AACpE;;AAA2D;;AAC3D;;;;;;AAD2D;;AAAA;;;;;;AAE3D;;AAA2D;;AAC3D;;;;;;AAD2D;;AAAA;;;;;;AAM3D;;AAA4C;;AAAwB;;;;;;AACpE;;AAA2D;;AAC3D;;;;;;AAD2D;;AAAA;;;;;;AAE3D;;AAA2D;;AAC3D;;;;;;AAD2D;;AAAA;;;;;;AAG7D;;AACE;;AACF;;;;;;AAFqB,2FAAuB,QAAvB,EAAuB,cAAvB;;;;;;;;QDXdsG,c;AAMX,8BAAoB5B,OAApB,EAAkDlF,MAAlD,EAAyE2B,WAAzE,EAAmG;AAAA;;AAA/E,aAAAuD,OAAA,GAAAA,OAAA;AAA8B,aAAAlF,MAAA,GAAAA,MAAA;AAAuB,aAAA2B,WAAA,GAAAA,WAAA;AAHzE,aAAAoF,OAAA,GAAU,KAAV;AACA,aAAAxE,SAAA,GAAY,KAAZ;AAGC;;;;eAED,oBAAQ;AACN,eAAKW,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB8D,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW7D,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB,CADc;AAExB4D,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW9D,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB;AAFc,WAAd,CAAZ;AAID;;;eAED,iBAAQ;AAAA;;AAEN,cAAMkB,QAAQ,qBAAqB,KAAKrB,IAAL,CAAUa,KAA/B,CAAd;AACA,eAAKxB,SAAL,GAAiB,IAAjB;AAEA,eAAKZ,WAAL,CAAiBuF,KAAjB,CAAuB3C,QAAvB,EACG3B,SADH,CACa,UAACsB,QAAD,EAAc;AACrB,mBAAI,CAAC6C,OAAL,GAAe,KAAf;;AACA,mBAAI,CAAC/G,MAAL,CAAYC,QAAZ,CAAqB,CAAC,YAAD,CAArB;;AACA,mBAAI,CAACsC,SAAL,GAAiB,KAAjB;AACD,WALL,EAMI,UAAC6D,KAAD,EAAW;AACT,mBAAI,CAACW,OAAL,GAAe,IAAf;AACA,mBAAI,CAACxE,SAAL,GAAiB,KAAjB;AACD,WATL;AAWD;;;;;;;uBAhCUuE,c,EAAc,mI,EAAA,uH,EAAA,mI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,0f;AAAA;AAAA;ACb3B;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAQ;;AACnC;;AACA;;AACA;;AAEA;;AAEF;;AACA;;AACE;;AAA2B;;AAAQ;;AACnC;;AACA;;AACA;;AAEA;;AAEF;;AACA;;AAGA;;AACQ;AAAA,mBAAS,IAAAI,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAC1B;;AACA;;AAAO;;AACP;;AAAmD;;AAAY;;AAC/D;;AACF;;AACF;;AACF;;;;AAlCsB;;AAAA;;AAQK;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAMA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAGhB;;AAAA;;AAGyC;;AAAA;;AAI3C;;AAAA;;;;;;;;;sEDlBIJ,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxG,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWY;;AAA8B;;AAAwB;;AAAtD;;;;;;AAA8B;;AAAA;;;;;;AAC9B;;AAAiC;;AAA8B;;AAA/D;;;;;;AAAiC;;AAAA;;;;;;AACjC;;AAAmC;;AAAkC;;AAArE;;;;;;AAAmC;;AAAA;;;;;;AAb/C;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAM;;AAAkC;;AAAxC;;AACA;;AAAM;;AAA0B;;AAAhC;;AACA;;AACA;;AACA;;AACA;;AAAM;;AAAgC;;AACxC;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAXkB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAgBJ;;;;;;AAEa;;;;;;AAJjB;;AACE;;AACE;;AAIF;;AACF;;;;;;AAJiB;;AAAA;;;;;;AAKC;;;;;;AATpB;;AACE;;AAQA;;AACF;;;;;;;;AATO;;AAAA,gGAAqC,UAArC,EAAqC,IAArC;;;;;;AAmBD;;;;;;AAEa;;;;;;AAJjB;;AACE;;AACE;;AAIF;;AACF;;;;;;AAJiB;;AAAA;;;;;;AAKC;;;;;;AATpB;;AACE;;AAQA;;AACF;;;;;;;;AATO;;AAAA,kGAAuC,UAAvC,EAAuC,IAAvC;;;;;;AAmBD;;;;;;AAEa;;;;;;AAJjB;;AACE;;AACE;;AAIF;;AACF;;;;;;AAJiB;;AAAA;;;;;;AAKC;;;;;;AATpB;;AACE;;AAQA;;AACF;;;;;;;;AATO;;AAAA,oGAAyC,UAAzC,EAAyC,IAAzC;;;;;;AAwBS;;;;;;AAEE;;;;;;AAThB;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAIF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AATgB;;AAAA;;;;;;AAUE;;;;;;AAnBpB;;AACE;;AAkBA;;AACF;;;;;;;;AAnBO;;AAAA,8FAAmC,UAAnC,EAAmC,IAAnC;;;;;;AA6BD;;;;;;AAEa;;;;;;AAJjB;;AACE;;AACE;;AAIF;;AACF;;;;;;AAJiB;;AAAA;;;;;;AAKC;;;;;;AATpB;;AACE;;AAQA;;AACF;;;;;;;;AATO;;AAAA,oGAAyC,UAAzC,EAAyC,IAAzC;;;;;;AAmBD;;;;;;AAEa;;;;;;AAJjB;;AACE;;AACE;;AAIF;;AACF;;;;;;AAJiB;;AAAA;;;;;;AAKC;;;;;;AATpB;;AACE;;AAQA;;AACF;;;;;;;;AATO;;AAAA,oGAAyC,UAAzC,EAAyC,IAAzC;;;;;;;;QDhHF2G,sB;AAeX,sCAAoBjC,OAApB,EAAiD/D,IAAjD,EAA4EnB,MAA5E,EAA4F;AAAA;;AAAxE,aAAAkF,OAAA,GAAAA,OAAA;AAA6B,aAAA/D,IAAA,GAAAA,IAAA;AAA2B,aAAAnB,MAAA,GAAAA,MAAA;AAP5E,aAAAoH,WAAA,GAAc,IAAd;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AAGC;;;;eAED,oBAAQ;AACN,eAAKC,uBAAL;AACD;;;eAED,mCAA0B;AAAA;;AACxB,eAAKxC,OAAL,CAAayC,YAAb,GAA4B/E,SAA5B,CAAsC,UAACsB,QAAD,EAAc;AAClD,mBAAI,CAAC0D,WAAL,GAAmB1D,QAAnB;;AACA,mBAAI,CAAC2D,aAAL;;AACA,mBAAI,CAACC,UAAL;;AACA,mBAAI,CAACC,QAAL;;AACA,mBAAI,CAACC,eAAL;;AACA,mBAAI,CAACC,qBAAL;;AACA,mBAAI,CAACC,qBAAL;AACD,WARD;AASD;;;eAED,yBAAgB;AAAA;;AACd,eAAKhD,OAAL,CAAaiD,sCAAb,GAAsDvF,SAAtD,CAAgE,UAACsB,QAAD,EAAc;AAC5E,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACC,kBAAL,GAA0BnE,QAA1B;AACD;AACF,WAJD;AAKD;;;eAED,sBAAa;AAAA;;AACX,eAAKgB,OAAL,CAAaoD,kCAAb,GAAkD1F,SAAlD,CAA4D,UAACsB,QAAD,EAAc;AACxE,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACG,gBAAL,GAAwBrE,QAAxB;AACD;AACF,WAJD;AAKD;;;eAED,oBAAW;AAAA;;AACT,eAAKgB,OAAL,CAAasD,gCAAb,GAAgD5F,SAAhD,CAA0D,UAACsB,QAAD,EAAc;AACtE,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACK,cAAL,GAAsBvE,QAAtB;AACD;AACF,WAJD;AAKD;;;eAED,2BAAkB;AAAA;;AAChB,eAAKgB,OAAL,CAAa8C,eAAb,GAA+BpF,SAA/B,CAAyC,UAACsB,QAAD,EAAc;AACrD,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACM,YAAL,GAAoBxE,QAApB;AACD;AACF,WAJD;AAKD;;;eAED,iCAAwB;AAAA;;AACtB,eAAKgB,OAAL,CAAayD,mCAAb,CAAiD,YAAjD,EAA+D/F,SAA/D,CAAyE,UAACsB,QAAD,EAAc;AACrF,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACQ,kBAAL,GAA0B1E,QAA1B;AACD;AACF,WAJD;AAKD;;;eAED,iCAAwB;AAAA;;AACtB,eAAKgB,OAAL,CAAayD,mCAAb,CAAiD,WAAjD,EAA8D/F,SAA9D,CAAwE,UAACsB,QAAD,EAAc;AACpF,gBAAIA,QAAQ,CAACkE,MAAT,GAAkB,CAAtB,EAAyB;AACvB,qBAAI,CAACS,kBAAL,GAA0B3E,QAA1B;AACD;AACF,WAJD;AAKD;;;;;;;uBAhFUiD,sB,EAAsB,mI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,woB;AAAA;AAAA;ACXnC;;AAsBA;;AACE;;AACE;;AACE;;AAAmB;;AAAa;;AAChC;;AAAa;AAAA;AAAA;;AAaf;;AAEA;;AACE;;AAAmB;;AAAO;;AAC1B;;AAAa;AAAA;AAAA;;AAaf;;AAEA;;AACE;;AAAmB;;AAAU;;AAC7B;;AAAa;AAAA;AAAA;;AAaf;;AAEA;;AACE;;AAAwD;;AAAU;;AAClE;;AAAa;AAAA;AAAA;;AAuBf;;AAEA;;AACE;;AAAmB;;AAAU;;AAC7B;;AAAa;AAAA;AAAA;;AAaf;;AAEA;;AACE;;AAAmB;;AAAS;;AAC5B;;AAAa;AAAA;AAAA;;AAaf;;AAEF;;AACF;;;;AAzIK;;AA0Bc;;AAAA;;AAiBA;;AAAA;;AAiBA;;AAAA;;AAgBC;;AAAA;;AACD;;AAAA;;AA2BA;;AAAA;;AAiBA;;AAAA;;;;;;;;;sED9GNA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT7G,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSQ;;AAA4C;;AAAc;;;;;;AAC1D;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAAgD;;AAChD;;;;;;AAKA;;AAA4C;;AAAc;;;;;;AAC1D;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMF;;AAA4C;;AAAc;;;;;;AAC1D;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;QDxBGsI,qB;AAOX,qCAAoB3G,IAApB,EAA8C+C,OAA9C,EAA4ElF,MAA5E,EAA4F;AAAA;;AAAxE,aAAAmC,IAAA,GAAAA,IAAA;AAA0B,aAAA+C,OAAA,GAAAA,OAAA;AAA8B,aAAAlF,MAAA,GAAAA,MAAA;AAH5E,aAAA+I,gBAAA,GAAmB,KAAnB;AACA,aAAAxG,SAAA,GAAY,KAAZ;AAGC;;;;eAED,oBAAQ;AACN,eAAKW,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB8D,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC1B,0DAAW3D,SAAX,CAAqB,EAArB,CAD0B,EACA,0DAAWF,QADX,EACqB,0DAAWC,SAAX,CAAqB,CAArB,CADrB,CAApB,EAER,CAAC,KAAK4F,YAAL,CAAkBzF,IAAlB,CAAuB,IAAvB,CAAD,CAFQ,CADc;AAIxB0D,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EACR,CAAC,0DAAW9D,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CADQ,CAJc;AAMxB4F,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EACJ,CAAC,0DAAW9F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CADI,CANkB;AAQxB6F,eAAG,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EACH,CAAC,0DAAWC,GAAX,CAAe,CAAf,CAAD,EAAoB,0DAAWC,GAAX,CAAe,GAAf,CAApB,EAAyC,0DAAWhG,SAAX,CAAqB,CAArB,CAAzC,EAAkE,0DAAWC,SAAX,CAAqB,CAArB,CAAlE,CADG,CARmB;AAUxBgG,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EACN,CAAC,0DAAWjG,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,CADM,CAVgB;AAYxBiG,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EACR,CAAC,0DAAWlG,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,CADQ;AAZc,WAAd,CAAZ;AAeD;;;eAED,sBAAaO,OAAb,EAAiC;AAAA;;AAC/B,iBAAO,KAAKzB,IAAL,CAAUY,GAAV,sDAAqEa,OAAO,CAACG,KAA7E,GAAsFE,IAAtF,CAA2F,2DAAI,UAACC,QAAD,EAAc;AAClH,gBAAIA,QAAJ,EAAc;AACZ,qBAAO;AAAC8E,4BAAY,EAAE;AAAf,eAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF,WANiG,CAA3F,EAMH,kEAAW,UAAA7E,GAAG,EAAI;AACpB,mBAAI,CAAC4E,gBAAL,GAAwB,IAAxB;AACA,mBAAO,wDAAW5E,GAAX,CAAP;AACD,WAHG,CANG,CAAP;AAUD;;;eAED,kBAAS;AAAA;;AACP,eAAK5B,SAAL,GAAiB,IAAjB;AACA,cAAMgC,QAAQ,qBAAiB,KAAKrB,IAAL,CAAUa,KAA3B,CAAd;AACA,eAAKmB,OAAL,CAAaqE,gBAAb,CAA8BhF,QAA9B,EACG3B,SADH,CACa,UAACsB,QAAD,EAAc;AACrB,mBAAI,CAAClE,MAAL,CAAYC,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,mBAAI,CAACsC,SAAL,GAAiB,KAAjB;AACD,WAJL,EAKI,UAAC6D,KAAD,EAAW;AACT,mBAAI,CAAC7D,SAAL,GAAiB,KAAjB;AACD,WAPL;AAQD;;;;;;;uBApDUuG,qB,EAAqB,gI,EAAA,mI,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,c;AAAA,6uC;AAAA;AAAA;ACdlC;;AACE;;AAAoE;AAAA,mBAAY,IAAA9D,MAAA,EAAZ;AAAoB,WAApB;;AAClE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAQ;;AACf;;AACA;;AACA;;AAGA;;AAGA;;AAEF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AACA;;AACA;;AAGA;;AAGF;;AACA;;AACE;;AAAO;;AAAI;;AACX;;AACA;;AACA;;AAGA;;AAGF;;AACA;;AACE;;AAAO;;AAAG;;AACV;;AACA;;AAAmB;;AAAwB;;AAC7C;;AACA;;AACE;;AAAO;;AAAM;;AACb;;AACE;;AACA;;AAAO;;AAAI;;AACb;;AACA;;AACE;;AACA;;AAAO;;AAAM;;AACf;;AACA;;AACE;;AACA;;AAAO;;AAAK;;AACd;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AACA;;AAAmB;;AAAqB;;AAC1C;;AACA;;AACE;;AACF;;AACA;;AAAO;;AACP;;AAA4C;;AAAK;;AACjD;;AACF;;AACF;;AACF;;AAEA;;AAAW;AAAA;AAAA;;AACT;;AAAwB;;AAAiC;;AACzD;;AACE;;AAA8C;AAAA,0CAA4B,KAA5B;AAAiC,WAAjC;;AAAmC;;AAAE;;AACrF;;AACF;;;;AAhFmD;;AAAA;;AAQxB;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AA6ByB;;AAAA;;AAI3C;;AAAA;;AAME;;AAAA;;;;;;;;;sED9DE8D,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTxI,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEdlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASagJ,W;AAOX,2BAAoBtE,OAApB,EAAkDlF,MAAlD,EAAkE;AAAA;;AAA9C,aAAAkF,OAAA,GAAAA,OAAA;AAA8B,aAAAlF,MAAA,GAAAA,MAAA;AAL3C,aAAA+B,MAAA,GAAS,KAAT;AACA,aAAA0H,iBAAA,GAAoB,KAApB;AACA,aAAAC,YAAA,GAAe,EAAf;AACA,aAAAC,uBAAA,GAA0B,EAA1B;AAGN;;;;eAED,eAAMpF,QAAN,EAA4B;AAAA;;AAC1B,iBAAO,KAAKW,OAAL,CAAa0E,aAAb,CAA2BrF,QAA3B,EAAqCN,IAArC,CAA0C,2DAAI,UAACC,QAAD,EAAc;AACjE2F,wBAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCrF,IAAI,CAACC,SAAL,CAAe;AACjDqF,mBAAK,EAAE7F,QAAQ,CAAC6F,KADiC;AAEjDd,kBAAI,EAAE/E,QAAQ,CAAC8F,YAAT,CAAsBhD,QAFqB;AAGjDlH,gBAAE,EAAEoE,QAAQ,CAAC8F,YAAT,CAAsBlK;AAHuB,aAAf,CAApC;AAKA,mBAAI,CAACiC,MAAL,GAAc,IAAd;AACA,mBAAI,CAAC4H,uBAAL,GAA+BzF,QAAQ,CAAC8F,YAAT,CAAsBhD,QAArD;AACD,WARgD,CAA1C,EAQH,kEAAW,KAAKiD,WAAL,CAAiB1G,IAAjB,CAAsB,IAAtB,CAAX,CARG,CAAP;AASD;;;eAED,yBAAgB;AACd,eAAKkG,iBAAL,GAAyB,IAAzB;AACD;;;eAED,kBAAS;AACP,eAAKA,iBAAL,GAAyB,KAAzB;AACA,eAAK1H,MAAL,GAAc,KAAd;AACA8H,sBAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,IAApC;AACD;;;eAED,2BAAe;AAAA;;AACb,iBAAO,IAAIzK,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AACrCA,mBAAO,CAAC,OAAI,CAACyC,MAAN,CAAP;AACD,WAFM,CAAP;AAGD;;;eAEO,qBAAYqE,KAAZ,EAAsC;AAC5C,cAAOxB,OAAP,GAAkBwB,KAAK,CAACA,KAAxB,CAAOxB,OAAP;AACA,eAAK8E,YAAL,GAAoB9E,OAApB;AACA,iBAAO,wDAAWwB,KAAX,CAAP;AACD;;;;;;;uBA1CUoD,W,EAAW,iH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBADC;;;;;sEACZA,W,EAAW;cADvB,wDACuB;eADZ;AAACxH,oBAAU,EAAE;AAAb,S;AACY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBakI,W;AAGX,2BAAoB/H,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAyE,GAAA,GAAM,8BAAN;AAGC;;;;eAED,0BAAiBuD,QAAjB,EAAmC;AACjC,iBAAO,KAAKhI,IAAL,CAAU6B,IAAV,WAAoC,KAAK4C,GAAzC,qBAA8DuD,QAA9D,EACJlG,IADI,CACC,kEAAW,UAAAmC,KAAK,EAAI;AACxB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFK,CADD,CAAP;AAID;;;eAED,uBAAc+D,QAAd,EAAoC;AAClC,iBAAO,KAAKhI,IAAL,CAAU6B,IAAV,WAAiC,KAAK4C,GAAtC,kBAAwDuD,QAAxD,EACJlG,IADI,CACC,kEAAW,UAAAmC,KAAK,EAAI;AACxB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFK,CADD,CAAP;AAID;;;eAGD,wBAAY;AACV,cAAMgE,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,4BAAgB;AADc,WAAhB,CAAhB;AAGA,iBAAO,KAAKjI,IAAL,CAAUY,GAAV,WAA4B,KAAK6D,GAAjC,iBAAkD;AAACwD,mBAAO,EAAPA;AAAD,WAAlD,CAAP;AACD;;;eAED,iCAAwBC,MAAxB,EAAsC;AACpC,cAAMD,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,4BAAgB;AADc,WAAhB,CAAhB;AAGA,iBAAO,KAAKjI,IAAL,CAAUY,GAAV,WAA4B,KAAK6D,GAAjC,wBAAkDyD,MAAlD,GAA4D;AAACD,mBAAO,EAAPA;AAAD,WAA5D,CAAP;AACD;;;eAED,6CAAoCC,MAApC,EAAkD;AAChD,cAAMC,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AAEA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC,CADuB;AAEvB,8BAAgB;AAFO,aAAhB;AADS,WAApB;AAMA,iBAAO,KAAK5H,IAAL,CAAUY,GAAV,WAA4B,KAAK6D,GAAjC,oCAA8DyD,MAA9D,GAAwEI,WAAxE,CAAP;AACD;;;eAED,oBAAW3K,EAAX,EAAqB;AACnB,cAAM8G,GAAG,aAAM,KAAKA,GAAX,4BAAgC9G,EAAhC,CAAT;AACA,iBAAO,KAAKqC,IAAL,CAAUY,GAAV,CAAuB6D,GAAvB,CAAP;AACD;;;eAED,oBAAWpC,IAAX,EAAyBJ,IAAzB,EAAmC;AACjC,cAAMkG,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AAEA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMxF,QAAQ,GAAG,IAAImG,QAAJ,EAAjB;AACAnG,kBAAQ,CAACoG,MAAT,CAAgB,MAAhB,EAAwBvG,IAAxB;AACAG,kBAAQ,CAACoG,MAAT,CAAgB,QAAhB,EAA0BnG,IAA1B;AACA,cAAMoC,GAAG,aAAM,KAAKA,GAAX,mBAAT;AACA,iBAAO,KAAKzE,IAAL,CAAU6B,IAAV,CAAgC4C,GAAhC,EAAqCrC,QAArC,EAA+CkG,WAA/C,CAAP;AACD;;;eAED,gCAAuBG,SAAvB,EAAwC;AACtC,cAAMN,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,2BAA+BgE,SAA/B,CAAT;AACA,iBAAO,KAAKzI,IAAL,CAAUY,GAAV,CAAuB6D,GAAvB,EAA4B6D,WAA5B,CAAP;AACD;;;eAED,6CAAoCG,SAApC,EAAqD;AACnD,cAAMN,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,+BAAmCgE,SAAnC,CAAT;AACA,iBAAO,KAAKzI,IAAL,CAAUY,GAAV,CAAuB6D,GAAvB,EAA4B6D,WAA5B,CAAP;AACD;;;eAED,gBAAOpE,OAAP,EAAqB;AACnB,cAAMiE,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,iBAAT;AACA,iBAAO,KAAKzE,IAAL,CAAU6B,IAAV,CAAgC4C,GAAhC,EAAqCP,OAArC,EAA6CoE,WAA7C,CAAP;AACD;;;eAED,mBAAUG,SAAV,EAA2B;AACzB,cAAMN,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,6BAAiCgE,SAAjC,CAAT;AACA,iBAAO,KAAKzI,IAAL,CAAUY,GAAV,CAA+B6D,GAA/B,EAAoC6D,WAApC,CAAP;AACD;;;eAED,iBAAOG,SAAP,EAAwB;AACtB,cAAMN,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,wBAA4BgE,SAA5B,CAAT;AACA,iBAAO,KAAKzI,IAAL,WAAkCyE,GAAlC,EAAuC6D,WAAvC,CAAP;AACD;;;eAED,mCAA0BG,SAA1B,EAA2C;AACzC,cAAMN,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,0CAA8CgE,SAA9C,CAAT;AACA,iBAAO,KAAKzI,IAAL,CAAUY,GAAV,CAAsB6D,GAAtB,EAA2B6D,WAA3B,CAAP;AACD;;;eAED,wBAAY;AACV,cAAMH,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC;AADuB,aAAhB;AADS,WAApB;AAMA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,uBAAT;AACA,iBAAO,KAAKzE,IAAL,CAAUY,GAAV,CAA2B6D,GAA3B,EAAgC6D,WAAhC,CAAP;AACD;;;eAED,kDAAsC;AACpC,cAAMH,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC,CADuB;AAEvB,8BAAgB;AAFO,aAAhB;AADS,WAApB;AAOA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,qCAAT;AACA,iBAAO,KAAKzE,IAAL,CAAUY,GAAV,CAAyB6D,GAAzB,EAA8B6D,WAA9B,CAAP;AACD;;;eAED,8CAAkC;AAChC,cAAMH,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC,CADuB;AAEvB,8BAAgB;AAFO,aAAhB;AADS,WAApB;AAOA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,2BAAT;AACA,iBAAO,KAAKzE,IAAL,CAAUY,GAAV,CAAyB6D,GAAzB,EAA8B6D,WAA9B,CAAP;AACD;;;eAED,4CAAgC;AAC9B,cAAMH,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC,CADuB;AAEvB,8BAAgB;AAFO,aAAhB;AADS,WAApB;AAOA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,oBAAT;AACA,iBAAO,KAAKzE,IAAL,CAAUY,GAAV,CAAyB6D,GAAzB,EAA8B6D,WAA9B,CAAP;AACD;;;eAED,2BAAe;AACb,cAAMH,IAAI,GAAiB7F,IAAI,CAAC8F,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAX,CAA3B;AACA,cAAMC,WAAW,GAAG;AAClBL,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gDAA2BE,IAAI,CAACP,KAAhC,CADuB;AAEvB,8BAAgB;AAFO,aAAhB;AADS,WAApB;AAOA,cAAMnD,GAAG,aAAM,KAAKA,GAAX,uBAAT;AACA,iBAAO,KAAKzE,IAAL,CAAUY,GAAV,CAA6B6D,GAA7B,EAAkC6D,WAAlC,CAAP;AACD;;;;;;;uBA1MUP,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBADC;;;;;sEACZA,W,EAAW;cADvB,wDACuB;eADZ;AAAClI,oBAAU,EAAE;AAAb,S;AACY,Q;;;;;;;;;;;;;;;;;;;;;;ACnBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa6I,U;;;;;;;eACX,mBAAUlH,SAAV,EAA2C;AAAA,cAAXmH,MAAW,uEAAF,EAAE;;AACzC,cAAI,CAACA,MAAM,CAACC,IAAP,EAAL,EAAoB;AAClB,mBAAOpH,SAAP;AACD;;AACD,iBAAOA,SAAS,CAACqH,MAAV,CAAiB,UAAA7K,OAAO,EAAI;AACjC,mBAAOA,OAAO,CAACkB,KAAR,CAAc4J,WAAd,GAA4BC,QAA5B,CAAqCJ,MAAM,CAACG,WAAP,EAArC,CAAP;AACD,WAFM,CAAP;AAGD;;;;;;;uBARUJ,U;AAAU,K;;;;YAAVA,U;AAAU;;;;;sEAAVA,U,EAAU;cAHtB,kDAGsB;eAHjB;AACJ5B,cAAI,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;ACNvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMkC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAlH,GAAG;AAAA,aAAImH,OAAO,CAAClF,KAAR,CAAcjC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, Input, OnInit} from '@angular/core';\nimport {Transaction} from '../interfaces/interfaces';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['./activity.component.css']\n})\nexport class ActivityComponent implements OnInit {\n\n  @Input()\n  transaction: Transaction;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  goToDetailsPage() {\n\n    this.router.navigate(['/charities/' + this.transaction.charity.id], {\n      queryParams: {\n        toHomePage: 'profilePage'\n      }\n    });\n\n  }\n}\n","<div *ngIf=\"this.transaction\">\n  <p>{{transaction?.message}}\n    <button (click)=\"goToDetailsPage()\">See details</button>\n  </p>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CharitiesComponent} from './charities/charities.component';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {LoginComponent} from './login/login.component';\nimport {CharityDetailsComponent} from './charities/charity-details/charity-details.component';\nimport {AuthGuard} from './auth.guard';\nimport {MyProfilePageComponent} from './my-profile-page/my-profile-page.component';\nimport {ActivityComponent} from './activity/activity.component';\n\nconst routes: Routes = [\n  {path: 'charities', component: CharitiesComponent},\n  {path: 'registration', component: RegistrationComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'charities/:id', component: CharityDetailsComponent},\n  {\n    path: 'profile', component: MyProfilePageComponent, canActivate: [AuthGuard], children: [\n      {path: 'activities', component: ActivityComponent}\n    ]\n  },\n  {path: '**', redirectTo: '/charities', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {AuthService} from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'networkofgivingUI';\n\n  constructor(public auth: AuthService) {\n  }\n}\n","<div class=\"main-container\">\n  <header class=\"header header-6\">\n    <div class=\"branding\">\n      <a [routerLink]=\"['/charities']\" class=\"nav-link\">\n        <span class=\"title\">Home Page</span>\n      </a>\n    </div>\n    <div class=\"header-actions\">\n      <a *ngIf=\"!auth.isAuth\" [routerLink]=\"['/login']\" class=\"nav-link nav-text\">Login</a>\n      <a *ngIf=\"!auth.isAuth\" [routerLink]=\"['/registration']\" class=\"nav-link nav-text\">Registration</a>\n      <div *ngIf=\"auth.isAuth\">\n        <a [routerLink]=\"['/profile']\" class=\"nav-link nav-icon-text\">\n          <clr-icon shape=\"user\"></clr-icon>\n          <span class=\"nav-text\">{{auth.currentCustomerUsername}}</span>\n        </a>\n        <button class=\"btn\" (click)=\"auth.logoutConfirm()\">Logout</button>\n      </div>\n    </div>\n  </header>\n  <div class=\"content-container\">\n    <div class=\"content-area\">\n\n      <router-outlet></router-outlet>\n\n    </div>\n  </div>\n</div>\n\n\n<clr-modal [(clrModalOpen)]=\"auth.logoutModalIsOpen\" [clrModalStaticBackdrop]=\"false\">\n  <h3 class=\"modal-title\">Are you sure?</h3>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"auth.logoutModalIsOpen = false\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"auth.logout()\">Ok</button>\n  </div>\n</clr-modal>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ClarityModule} from '@clr/angular';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {LoginComponent} from './login/login.component';\nimport {CharitiesComponent} from './charities/charities.component';\nimport {CharityComponent} from './charities/charity/charity.component';\nimport {CharityDetailsComponent} from './charities/charity-details/charity-details.component';\nimport {SearchPipe} from './services/pipes/search.pipe';\nimport {MyProfilePageComponent} from './my-profile-page/my-profile-page.component';\nimport {ActivityComponent} from './activity/activity.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    CharitiesComponent,\n    CharityComponent,\n    CharityDetailsComponent,\n    SearchPipe,\n    MyProfilePageComponent,\n    ActivityComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthService} from './services/auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    return this.authService.isAuthenticated().then(isAuth => {\r\n      if (isAuth) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/charities'],\r\n          {\r\n            queryParams: {\r\n              auth: false\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../services/http.service';\nimport {Charity} from '../interfaces/interfaces';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {AuthService} from '../services/auth.service';\n\n@Component({\n  selector: 'app-charities',\n  templateUrl: './charities.component.html',\n  styleUrls: ['./charities.component.css']\n})\nexport class CharitiesComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private httpService: HttpService, private http: HttpClient, private router: Router, public auth: AuthService) {\n  }\n\n  charities: Charity[];\n  searchString = '';\n  showModalClause = false;\n  form: FormGroup;\n  file: File;\n  fileIsCorrect;\n  fileIsSet = false;\n  submitted = false;\n  responseText = '';\n  alertIsClosed = true;\n  isDonationAndParticipantsUnset = false;\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.responseText = this.route.snapshot.queryParamMap.get('deleted');\n      if (this.responseText) {\n        this.alertIsClosed = false;\n        this.router.navigate(['/charities']);\n      }\n    });\n\n    this.getCharities();\n\n    this.fileIsCorrect = true;\n\n    this.form = new FormGroup({\n      title: new FormControl('', [Validators.required, Validators.minLength(6),\n        Validators.maxLength(95)], [this.uniqTitle.bind(this)]),\n      description: new FormControl('', [Validators.required, Validators.maxLength(250)]),\n      donationRequired: new FormControl(),\n      participantsRequired: new FormControl()\n    });\n  }\n\n  getCharities() {\n    this.charities = null;\n    this.httpService.getCharities().subscribe((charities: Charity[]) => {\n      this.charities = charities;\n    });\n  }\n\n  uniqTitle(control: FormControl): Observable<{ [key: string]: boolean }> {\n    let body = new HttpParams();\n    body = body.set('title', control.value);\n    return this.http.post<boolean>('http://54.174.196.3:8080/api/charities/exist', body).pipe(map((response) => {\n      if (response) {\n        return {uniqTitle: true};\n      } else {\n        return null;\n      }\n    }), catchError(err => {\n      return throwError(err);\n    }));\n  }\n\n  openModalAddCharity() {\n    this.showModalClause = true;\n  }\n\n  setFile(file: File): void {\n    if (file?.type.match('image/*') || file == null) {\n      this.file = file;\n      this.fileIsCorrect = true;\n      this.fileIsSet = true;\n    } else {\n      this.fileIsCorrect = false;\n    }\n  }\n\n  submit() {\n    this.submitted = true;\n    const formData = {...this.form.value};\n\n    if (!formData.donationRequired && !formData.participantsRequired) {\n      this.isDonationAndParticipantsUnset = true;\n      this.submitted = false;\n    } else {\n      const data: string = JSON.stringify(formData);\n\n      this.httpService.addCharity(data, this.file).subscribe(\n        (response) => {\n          this.isDonationAndParticipantsUnset = false;\n          this.showModalClause = false;\n          this.getCharities();\n          this.responseText = response.message;\n          this.alertIsClosed = false;\n          this.submitted = false;\n          this.form.reset();\n        }\n      );\n    }\n  }\n\n  close() {\n    this.showModalClause = false;\n    this.form.reset();\n  }\n\n}\n\n","<clr-alert [(clrAlertClosed)]=\"alertIsClosed\" [clrAlertType]=\"'success'\">\n  <clr-alert-item>\n        <span class=\"alert-text\">\n            {{responseText}}\n        </span>\n  </clr-alert-item>\n</clr-alert>\n\n\n<div class=\"clr-row clr-justify-content-between\">\n  <div class=\"clr-col-md-3\">\n    <form class=\"search\">\n      <label for=\"search_input\">\n        <input id=\"search_input\" clrInput type=\"text\" name=\"text\" [(ngModel)]=\"searchString\"\n               placeholder=\"Search for keywords...\">\n      </label>\n    </form>\n  </div>\n  <div *ngIf=\"auth.isAuth\" class=\"clr-col-md-2 clr-col-sm-5\">\n    <button class=\"btn btn-primary\" (click)=\"openModalAddCharity()\">Create charity</button>\n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\n               *ngFor=\"let charity of charities | searchCharities:searchString\"\n               [charity]=\"charity\"\n  ></app-charity>\n</div>\n\n\n<clr-modal [(clrModalOpen)]=\"showModalClause\" [clrModalClosable]=\"false\">\n  <h3 class=\"modal-title\">Create new charity</h3>\n  <div class=\"modal-body\">\n    <form class=\"login\" [formGroup]=\"form\">\n      <div>\n        <clr-input-container>\n          <label>Title</label>\n          <input type=\"text\" name=\"title\" clrInput placeholder=\"Title\" formControlName=\"title\"/>\n          <clr-control-error *clrIfError=\"'required'\">This is a required field</clr-control-error>\n          <clr-control-error *clrIfError=\"'minlength'; error as err\">Must be at least {{ err.requiredLength }}\n            characters\n          </clr-control-error>\n          <clr-control-error *clrIfError=\"'maxlength'; error as err\">Must be no more {{ err.requiredLength }}\n            characters\n          </clr-control-error>\n          <clr-control-error *clrIfError=\"'uniqTitle'\">Your title is already taken, try another\n          </clr-control-error>\n        </clr-input-container>\n        <input type=\"file\" name=\"file\" accept=\"image/*\" (change)=\"setFile($event.target.files[0])\">\n        <span *ngIf=\"!fileIsCorrect\" class=\"error\"><br>The file is not valid, please select a picture.</span>\n        <clr-textarea-container>\n          <label>Description</label>\n          <textarea clrTextarea formControlName=\"description\" name=\"description\"></textarea>\n          <clr-control-error *clrIfError=\"'required'\">This is a required field</clr-control-error>\n          <clr-control-error *clrIfError=\"'maxlength'; error as err\">Must be no more {{ err.requiredLength }}\n            characters\n          </clr-control-error>\n        </clr-textarea-container>\n        <clr-input-container>\n          <label>Donation required</label>\n          <input clrInput type=\"number\" name=\"donation\" placeholder=\"Donation\" formControlName=\"donationRequired\"/>\n          <clr-control-helper>One of the fields must be filled (Donation required or Participant required)\n          </clr-control-helper>\n          <clr-control-error>Allowed Values: 0 to 100</clr-control-error>\n        </clr-input-container>\n        <clr-input-container>\n          <label>Participant required</label>\n          <input clrInput type=\"number\" name=\"participant\" placeholder=\"Participant\"\n                 formControlName=\"participantsRequired\"/>\n          <clr-control-helper>One of the fields must be filled (Donation required or Participant required)\n          </clr-control-helper>\n          <clr-control-error>Allowed Values: 0 to 100</clr-control-error>\n        </clr-input-container>\n      </div>\n    </form>\n    <div *ngIf=\"isDonationAndParticipantsUnset\" style=\"color: red;\" class=\"alert-items\">\n      <div class=\"alert-item static\">\n        <div class=\"alert-icon-wrapper\">\n          <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <div class=\"alert-text\">\n          You did not set one or both of the following fields:<br>Donation required/Participant required !\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-outline\" type=\"button\" (click)=\"close();\">Cancel</button>\n    <button type=\"submit\" class=\"btn btn-primary\"\n            [disabled]=\"form.invalid || form.pending || submitted || !fileIsCorrect || !fileIsSet\"\n            (click)=\"submit()\">Create\n    </button>\n  </div>\n  <div class=\"modal-backdrop\" aria-hidden=\"false\"></div>\n\n</clr-modal>\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {HttpService} from '../../services/http.service';\nimport {Charity, Donate} from '../../interfaces/interfaces';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-charity-details',\n  templateUrl: './charity-details.component.html',\n  styleUrls: ['./charity-details.component.css']\n})\nexport class CharityDetailsComponent implements OnInit {\n  charity: Charity;\n  charityOwnCurrentCustomer;\n  donateModalIsOpen = false;\n  donationAmount: number;\n  volunteerModalIsOpen = false;\n  deleteModalIsOpen = false;\n  checkOwner = true;\n  checkIfVolunteer = false;\n  submitted = false;\n  responseMessage: string;\n  alertIsClosed = true;\n  amountOfDonate: number;\n  toHomePage: string;\n  toProfilePage: string;\n  backRoute: string;\n\n  constructor(private route: ActivatedRoute, private service: HttpService, public auth: AuthService, private router: Router) {\n  }\n\n\n  ngOnInit(): void {\n    this.getParamsFromUrl();\n\n    this.route.queryParams.subscribe((params: Params) => {\n      this.toHomePage = params.toHomePage;\n      this.toProfilePage = params.toProfilePage;\n      if (this.toHomePage) {\n        this.backRoute = this.toHomePage;\n      } else if (this.toProfilePage) {\n        this.backRoute = this.toProfilePage;\n      }\n    });\n  }\n\n  checkIfCurrentUserOwnThisCharity() {\n    if (this.charity) {\n      this.service.ownedByCurrentCustomer(this.charity.id).subscribe(\n        (response) => {\n          if (response) {\n            this.charityOwnCurrentCustomer = true;\n          } else {\n            this.charityOwnCurrentCustomer = false;\n          }\n        }\n      );\n    }\n  }\n\n  checkIfCurrentUserVolunteerThisCharity() {\n    if (this.charity) {\n      this.service.currentCustomerVolunteerCharityById(this.charity.id).subscribe(\n        (response) => {\n          if (response) {\n            this.checkIfVolunteer = true;\n          } else {\n            this.checkIfVolunteer = false;\n          }\n        });\n    }\n  }\n\n  checkAmountForDonate() {\n    if (this.charity) {\n      this.service.recommendedAmountOfDonate(this.charity.id).subscribe((response) => {\n        this.amountOfDonate = response;\n      });\n    }\n  }\n\n  getParamsFromUrl() {\n    this.route.params.subscribe((params: Params) => {\n\n      this.service.getCharity(+params.id)\n        .subscribe((charity) => {\n            this.charity = charity;\n            if (this.auth.isAuth && this.checkOwner) {\n              this.checkIfCurrentUserOwnThisCharity();\n            }\n            if (this.auth.isAuth && !this.checkIfVolunteer) {\n              this.checkIfCurrentUserVolunteerThisCharity();\n            }\n            if (this.auth.isAuth && this.charity.donationRequired) {\n              this.checkAmountForDonate();\n            }\n          },\n          (error) => {\n          });\n    });\n  }\n\n  donate() {\n    this.submitted = true;\n    const donate: Donate = {\n      id: this.charity.id,\n      amount: this.donationAmount\n    };\n\n    this.service.donate(donate).subscribe((response) => {\n      this.checkOwner = false;\n      this.donateModalIsOpen = false;\n      this.alertIsClosed = false;\n      this.submitted = false;\n      this.responseMessage = response.message;\n      this.getParamsFromUrl();\n    });\n  }\n\n  volunteer() {\n    this.submitted = true;\n    this.service.volunteer(this.charity.id).subscribe((response) => {\n      this.checkOwner = false;\n      this.volunteerModalIsOpen = false;\n      this.checkIfVolunteer = true;\n      this.alertIsClosed = false;\n      this.submitted = false;\n      this.responseMessage = response.message;\n      this.getParamsFromUrl();\n    });\n  }\n\n  delete() {\n    this.submitted = true;\n    this.service.delete(this.charity.id).subscribe((response) => {\n      this.submitted = false;\n      this.router.navigate(['/charities'],\n        {\n          queryParams: {\n            deleted: response.message\n          }\n        });\n    });\n  }\n\n  backDecision() {\n    if (this.backRoute === 'profilePage') {\n      this.router.navigate(['/profile']);\n    } else {\n      this.router.navigate(['/charities']);\n    }\n  }\n}\n","<clr-alert [(clrAlertClosed)]=\"alertIsClosed\" [clrAlertType]=\"'success'\">\n  <clr-alert-item>\n        <span class=\"alert-text\">\n            {{responseMessage}}\n        </span>\n  </clr-alert-item>\n</clr-alert>\n\n<div *ngIf=\"charity\">\n  <div class=\"clr-row\">\n    <div class=\"clr-col-2\">\n      <button (click)=\"backDecision()\">Back</button>\n    </div>\n  </div>\n  <div class=\"clr-row\">\n    <div class=\"clr-col-10\">\n      <p>{{charity.title}}</p>\n    </div>\n  </div>\n  <div class=\"clr-row\">\n    <div class=\"clr-col-lg-5 clr-col-sm-5 clr-col-md-5\">\n      <div class=\"card\">\n        <div class=\"card-block\">\n          <div class=\"card-text\">\n            <div class=\"card-img\">\n              <img [src]=\"charity.image\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"clr-col-4\">\n      <p *ngIf=\"charity.donationCurrent+1 && charity.donationRequired\">Current donations / Required\n        donations: {{charity.donationCurrent}}/{{charity.donationRequired}}</p>\n      <p *ngIf=\"charity.participantsCurrent+1 && charity.participantsRequired\">Current participants / Required\n        participants: {{charity.participantsCurrent}}/{{charity.participantsRequired}}</p>\n\n      <p *ngIf=\"!auth.isAuth\">You cannot donate or participate, login first.</p>\n      <div *ngIf=\"charityOwnCurrentCustomer === true || charityOwnCurrentCustomer === false\">\n        <div *ngIf=\"auth.isAuth && charityOwnCurrentCustomer\">\n          <p>This is your charity and you do not have the opportunity to donate or participate in it.</p>\n          <button class=\"btn btn-warning\" (click)=\"deleteModalIsOpen = true\">Delete charity</button>\n        </div>\n        <div *ngIf=\"auth.isAuth && !charityOwnCurrentCustomer\">\n          <button *ngIf=\"this.charity.donationRequired\" class=\"btn btn-primary\" (click)=\"donateModalIsOpen = true\">\n            Donate\n          </button>\n          <button *ngIf=\"!checkIfVolunteer && this.charity.participantsRequired\" class=\"btn btn-primary\"\n                  (click)=\"volunteerModalIsOpen = true\">Volunteer\n          </button>\n          <p *ngIf=\"checkIfVolunteer\">You are already a volunteer of this charity.</p>\n        </div>\n        <p *ngIf=\"this.charity.donationRequired && amountOfDonate && !charityOwnCurrentCustomer\">Recommended donation\n          amount: <strong>{{this.amountOfDonate}}</strong></p>\n      </div>\n    </div>\n  </div>\n  <div class=\"clr-row\">\n    <div class=\"clr-col-10\">\n      <p>{{charity.description}}</p>\n    </div>\n  </div>\n</div>\n\n\n<clr-modal [(clrModalOpen)]=\"donateModalIsOpen\">\n  <h3 class=\"modal-title\">Donate to charity</h3>\n  <div class=\"modal-body\">\n    <clr-input-container>\n      <label>Amount to donate</label>\n      <input clrInput type=\"number\" name=\"donation\" placeholder=\"Amount\" [(ngModel)]=\"donationAmount\"/>\n    </clr-input-container>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"donateModalIsOpen = false; this.donationAmount = null\">\n      Cancel\n    </button>\n    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"submitted\" (click)=\"donate()\">Ok</button>\n  </div>\n</clr-modal>\n\n\n<clr-modal [(clrModalOpen)]=\"volunteerModalIsOpen\" [clrModalStaticBackdrop]=\"false\">\n  <h3 class=\"modal-title\">Volunteer to charity?</h3>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"volunteerModalIsOpen = false\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"submitted\" (click)=\"volunteer()\">Ok</button>\n  </div>\n</clr-modal>\n\n\n<clr-modal [(clrModalOpen)]=\"deleteModalIsOpen\" [clrModalStaticBackdrop]=\"false\">\n  <h3 class=\"modal-title\">Are you sure?</h3>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline\" (click)=\"deleteModalIsOpen = false\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"submitted\" (click)=\"delete()\">Ok</button>\n  </div>\n</clr-modal>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Charity} from '../../interfaces/interfaces';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-charity',\n  templateUrl: './charity.component.html',\n  styleUrls: ['./charity.component.css']\n})\nexport class CharityComponent implements OnInit {\n\n  @Input()\n  charity: Charity;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  goToDetailsPage() {\n    if (this.router.url === '/charities') {\n      this.router.navigate(['/charities/' + this.charity.id], {\n        queryParams: {\n          toHomePage: 'homePage'\n        }\n      });\n    } else {\n      this.router.navigate(['/charities/' + this.charity.id], {\n        queryParams: {\n          toProfilePage: 'profilePage'\n        }\n      });\n    }\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{charity.title}}\n  </div>\n  <div class=\"card-block\">\n    <div class=\"card-img\">\n      <img [src]=\"charity.image\" alt=\"image\"/>\n    </div>\n    <div class=\"card-text\">\n      {{charity.description}}\n    </div>\n    <div *ngIf=\"charity.donationCurrent+1 && charity.donationRequired\" class=\"card-text\">\n      Current donations / Required donations: {{charity.donationCurrent}}/{{charity.donationRequired}}\n    </div>\n    <div *ngIf=\"charity.participantsCurrent+1 && charity.participantsRequired\" class=\"card-text\">\n      Current participants / Required participants: {{charity.participantsCurrent}}/{{charity.participantsRequired}}\n    </div>\n    <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\" (click)=\"goToDetailsPage()\">See details</button>\n    </div>\n  </div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HttpService} from '../services/http.service';\nimport {LoginRequest} from '../interfaces/interfaces';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  isError = false;\n  submitted = false;\n\n  constructor(private service: HttpService, private router: Router, public authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n    });\n  }\n\n  login() {\n\n    const formData: LoginRequest = {...this.form.value};\n    this.submitted = true;\n\n    this.authService.login(formData)\n      .subscribe((response) => {\n          this.isError = false;\n          this.router.navigate(['/charities']);\n          this.submitted = false;\n        },\n        (error) => {\n          this.isError = true;\n          this.submitted = false;\n        });\n\n  }\n}\n","<div class=\"login-wrapper\">\n  <form class=\"login\" [formGroup]=\"form\">\n    <section class=\"title\">\n      Login\n    </section>\n    <div class=\"login-group\">\n      <clr-input-container>\n        <label class=\"clr-sr-only\">Username</label>\n        <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" formControlName=\"username\"/>\n        <clr-control-error *clrIfError=\"'required'\">This is a required field</clr-control-error>\n        <clr-control-error *clrIfError=\"'minlength'; error as err\">Must be at least {{ err.requiredLength }}characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'maxlength'; error as err\">Must be no more {{ err.requiredLength }}characters\n        </clr-control-error>\n      </clr-input-container>\n      <clr-password-container>\n        <label class=\"clr-sr-only\">Password</label>\n        <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" formControlName=\"password\"/>\n        <clr-control-error *clrIfError=\"'required'\">This is a required field</clr-control-error>\n        <clr-control-error *clrIfError=\"'minlength'; error as err\">Must be at least {{ err.requiredLength }}characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'maxlength'; error as err\">Must be no more {{ err.requiredLength }}characters\n        </clr-control-error>\n      </clr-password-container>\n      <div *ngIf=\"isError\" [class.error]=\"isError\" [class.active]=\"isError\">\n        Invalid user name or password\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid || form.pending || submitted\"\n              (click)=\"login()\">Login\n      </button>\n      <span> Haven't account?\n      <a [routerLink]=\"['/registration']\" class=\"signup\">Registration</a>\n      </span>\n    </div>\n  </form>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Charity, ProfileInfo, Transaction} from '../interfaces/interfaces';\nimport {HttpService} from '../services/http.service';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-my-profile-page',\n  templateUrl: './my-profile-page.component.html',\n  styleUrls: ['./my-profile-page.component.css']\n})\nexport class MyProfilePageComponent implements OnInit {\n  profileInfo: ProfileInfo;\n  charitiesVolunteer: Charity[];\n  charitiesDonates: Charity[];\n  charitiesOwned: Charity[];\n  charitiesInProcess: Charity[];\n  charitiesCompleted: Charity[];\n  transactions: Transaction[];\n  ownedActive = true;\n  donatesActive = false;\n  volunteerActive = false;\n  activitiesActive = false;\n  inProcessActive = false;\n  completedActive = false;\n\n  constructor(private service: HttpService, public auth: AuthService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.getAllInfoAboutCustomer();\n  }\n\n  getAllInfoAboutCustomer() {\n    this.service.customerInfo().subscribe((response) => {\n      this.profileInfo = response;\n      this.getVolunteers();\n      this.getDonates();\n      this.getOwned();\n      this.getTransactions();\n      this.getCharitiesInProcess();\n      this.getCharitiesCompleted();\n    });\n  }\n\n  getVolunteers() {\n    this.service.getCharitiesCurrentCustomerIsVolunteer().subscribe((response) => {\n      if (response.length > 0) {\n        this.charitiesVolunteer = response;\n      }\n    });\n  }\n\n  getDonates() {\n    this.service.getCharitiesCurrentCustomerDonater().subscribe((response) => {\n      if (response.length > 0) {\n        this.charitiesDonates = response;\n      }\n    });\n  }\n\n  getOwned() {\n    this.service.getCharitiesCurrentCustomerOwner().subscribe((response) => {\n      if (response.length > 0) {\n        this.charitiesOwned = response;\n      }\n    });\n  }\n\n  getTransactions() {\n    this.service.getTransactions().subscribe((response) => {\n      if (response.length > 0) {\n        this.transactions = response;\n      }\n    });\n  }\n\n  getCharitiesInProcess() {\n    this.service.getCurrentCustomerCharitiesByStatus('IN_PROCESS').subscribe((response) => {\n      if (response.length > 0) {\n        this.charitiesInProcess = response;\n      }\n    });\n  }\n\n  getCharitiesCompleted() {\n    this.service.getCurrentCustomerCharitiesByStatus('COMPLETED').subscribe((response) => {\n      if (response.length > 0) {\n        this.charitiesCompleted = response;\n      }\n    });\n  }\n}\n","<div *ngIf=\"profileInfo\">\r\n  <div class=\"clr-row\">\r\n    <div class=\"clr-col-lg-3 clr-col-md-3 clr-col-sm-3 clr-col-3\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          My profile\r\n        </div>\r\n        <div class=\"card-block\">\r\n          <div class=\"card-text\">\r\n            <span>Username: {{profileInfo.username}}<br></span>\r\n            <span>Name: {{profileInfo.name}}<br></span>\r\n            <span *ngIf=\"profileInfo.age\">Age: {{profileInfo.age}}<br></span>\r\n            <span *ngIf=\"profileInfo.gender\">Gender: {{profileInfo.gender}}<br></span>\r\n            <span *ngIf=\"profileInfo.location\">Location: {{profileInfo.location}}<br></span>\r\n            <span>Balance: {{profileInfo.balance}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"panel\">\r\n  <clr-tabs>\r\n    <clr-tab>\r\n      <button clrTabLink>All charities</button>\r\n      <ng-template [(clrIfActive)]=\"ownedActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.charitiesOwned; else msg\">\r\n            <div class=\"clr-row\">\r\n              <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\r\n                           *ngFor=\"let charity of charitiesOwned\"\r\n                           [charity]=\"charity\"\r\n              ></app-charity>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No own charities</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n    <clr-tab>\r\n      <button clrTabLink>Donates</button>\r\n      <ng-template [(clrIfActive)]=\"donatesActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.charitiesDonates; else msg\">\r\n            <div class=\"clr-row\">\r\n              <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\r\n                           *ngFor=\"let charity of charitiesDonates\"\r\n                           [charity]=\"charity\"\r\n              ></app-charity>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No donations</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n    <clr-tab>\r\n      <button clrTabLink>Volunteers</button>\r\n      <ng-template [(clrIfActive)]=\"volunteerActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.charitiesVolunteer; else msg\">\r\n            <div class=\"clr-row\">\r\n              <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\r\n                           *ngFor=\"let charity of charitiesVolunteer\"\r\n                           [charity]=\"charity\"\r\n              ></app-charity>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No volunteering</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n    <clr-tab>\r\n      <a clrTabLink [routerLink]=\"['/profile', 'activities']\">Activities</a>\r\n      <ng-template [(clrIfActive)]=\"activitiesActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.transactions; else msg\">\r\n            <div class=\"clr-row\">\r\n              <div class=\"clr-col-lg-6 clr-col-md-9 clr-col-12\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-block\">\r\n                    <div class=\"card-title\">\r\n                      <router-outlet>\r\n                        <app-activity\r\n                          *ngFor=\"let transaction of this.transactions\"\r\n                          [transaction]=transaction\r\n                        ></app-activity>\r\n                      </router-outlet>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No activities</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n    <clr-tab>\r\n      <button clrTabLink>In process</button>\r\n      <ng-template [(clrIfActive)]=\"inProcessActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.charitiesInProcess; else msg\">\r\n            <div class=\"clr-row\">\r\n              <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\r\n                           *ngFor=\"let charity of charitiesInProcess\"\r\n                           [charity]=\"charity\"\r\n              ></app-charity>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No charities in process</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n    <clr-tab>\r\n      <button clrTabLink>Completed</button>\r\n      <ng-template [(clrIfActive)]=\"completedActive\">\r\n        <clr-tab-content>\r\n          <div *ngIf=\"this.charitiesCompleted; else msg\">\r\n            <div class=\"clr-row\">\r\n              <app-charity class=\"clr-col-sm-3 clr-col-md-3 clr-col-lg-3 clr-col-xl-3\"\r\n                           *ngFor=\"let charity of charitiesCompleted\"\r\n                           [charity]=\"charity\"\r\n              ></app-charity>\r\n            </div>\r\n          </div>\r\n          <ng-template #msg>No completed charities</ng-template>\r\n        </clr-tab-content>\r\n      </ng-template>\r\n    </clr-tab>\r\n\r\n  </clr-tabs>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Observable, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, map} from 'rxjs/operators';\nimport {HttpService} from '../services/http.service';\nimport {Customer} from '../interfaces/interfaces';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  form: FormGroup;\n  private usernameIsValid: boolean;\n  serverIsDisabled = false;\n  submitted = false;\n\n  constructor(private http: HttpClient, private service: HttpService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      username: new FormControl('', [\n          Validators.maxLength(20), Validators.required, Validators.minLength(6)],\n        [this.uniqUsername.bind(this)]),\n      password: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      name: new FormControl('',\n        [Validators.required, Validators.minLength(6), Validators.maxLength(40)]),\n      age: new FormControl('',\n        [Validators.min(0), Validators.max(100), Validators.minLength(1), Validators.maxLength(3)]),\n      gender: new FormControl('',\n        [Validators.minLength(1), Validators.maxLength(40)]),\n      location: new FormControl('',\n        [Validators.minLength(1), Validators.maxLength(40)])\n    });\n  }\n\n  uniqUsername(control: FormControl): Observable<{ [key: string]: boolean }> {\n    return this.http.get<boolean>(`http://54.174.196.3:8080/api/user/customer/${control.value}`).pipe(map((response) => {\n      if (response) {\n        return {uniqUsername: true};\n      } else {\n        return null;\n      }\n    }), catchError(err => {\n      this.serverIsDisabled = true;\n      return throwError(err);\n    }));\n  }\n\n  submit() {\n    this.submitted = true;\n    const formData: Customer = {...this.form.value};\n    this.service.registerCustomer(formData)\n      .subscribe((response) => {\n          this.router.navigate(['/login']);\n          this.submitted = false;\n        },\n        (error) => {\n          this.submitted = false;\n        });\n  }\n}\n","<div class=\"login-wrapper\">\n  <form class=\"login\" clrLayout=\"vertical\" clrForm [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <section class=\"title\">\n      Registration\n    </section>\n    <div class=\"login-group\">\n      <clr-input-container>\n        <label>Username</label>\n        <input clrInput type=\"text\" name=\"username\" placeholder=\"Username\" formControlName=\"username\"/>\n        <clr-control-error *clrIfError=\"'required'\">Can't be empty</clr-control-error>\n        <clr-control-error *clrIfError=\"'minlength'\">\n          Must be at least {{form.get('username').errors?.minlength.requiredLength}} characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'maxlength'\">\n          Must be no more {{form.get('username').errors?.maxlength.requiredLength}} characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'uniqUsername'\">Your username is already taken, try another\n        </clr-control-error>\n      </clr-input-container>\n      <clr-password-container>\n        <label>Password</label>\n        <input clrPassword type=\"text\" name=\"password\" placeholder=\"Password\" formControlName=\"password\"/>\n        <clr-control-error *clrIfError=\"'required'\">Can't be empty</clr-control-error>\n        <clr-control-error *clrIfError=\"'minlength'\">\n          Must be at least {{form.get('password').errors?.minlength.requiredLength}} characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'maxlength'\">\n          Must be no more {{form.get('password').errors?.maxlength.requiredLength}} characters\n        </clr-control-error>\n      </clr-password-container>\n      <clr-input-container>\n        <label>Name</label>\n        <input clrInput type=\"text\" name=\"name\" placeholder=\"Name\" formControlName=\"name\"/>\n        <clr-control-error *clrIfError=\"'required'\">Can't be empty</clr-control-error>\n        <clr-control-error *clrIfError=\"'minlength'\">\n          Must be at least {{form.get('name').errors?.minlength.requiredLength}} characters\n        </clr-control-error>\n        <clr-control-error *clrIfError=\"'maxlength'\">\n          Must be no more {{form.get('name').errors?.maxlength.requiredLength}} characters\n        </clr-control-error>\n      </clr-input-container>\n      <clr-input-container>\n        <label>Age</label>\n        <input clrInput type=\"number\" name=\"age\" placeholder=\"Age\" formControlName=\"age\"/>\n        <clr-control-error>Allowed Values: 0 to 100</clr-control-error>\n      </clr-input-container>\n      <clr-radio-container clrInline>\n        <label>Gender</label>\n        <clr-radio-wrapper>\n          <input type=\"radio\" clrRadio name=\"gender\" value=\"Male\" formControlName=\"gender\"/>\n          <label>Male</label>\n        </clr-radio-wrapper>\n        <clr-radio-wrapper>\n          <input type=\"radio\" clrRadio name=\"gender\" value=\"Female\" formControlName=\"gender\"/>\n          <label>Female</label>\n        </clr-radio-wrapper>\n        <clr-radio-wrapper>\n          <input type=\"radio\" clrRadio name=\"gender\" value=\"Other\" formControlName=\"gender\"/>\n          <label>Other</label>\n        </clr-radio-wrapper>\n      </clr-radio-container>\n      <clr-input-container>\n        <label>Location</label>\n        <input clrInput type=\"text\" name=\"location\" placeholder=\"Location\" formControlName=\"location\"/>\n        <clr-control-error>Maximum 40 characters</clr-control-error>\n      </clr-input-container>\n      <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid || form.pending || submitted\">\n        Registration\n      </button>\n      <span> Have account?\n      <a [routerLink]=\"['/login']\" class=\"signup\">Login</a>\n      </span>\n    </div>\n  </form>\n</div>\n\n<clr-modal [(clrModalOpen)]=\"serverIsDisabled\">\n  <h3 class=\"modal-title\">Server is disabled now, try later</h3>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"serverIsDisabled = false\">Ok</button>\n  </div>\n</clr-modal>\n","import {Injectable} from '@angular/core';\r\nimport {LoginRequest, LoginResponse} from '../interfaces/interfaces';\r\nimport {HttpService} from './http.service';\r\nimport {Router} from '@angular/router';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n\r\n  public isAuth = false;\r\n  public logoutModalIsOpen = false;\r\n  public errorMessage = '';\r\n  public currentCustomerUsername = '';\r\n\r\n  constructor(private service: HttpService, private router: Router) {\r\n  }\r\n\r\n  login(formData: LoginRequest): Observable<LoginResponse> {\r\n    return this.service.loginCustomer(formData).pipe(tap((response) => {\r\n      localStorage.setItem('currentUser', JSON.stringify({\r\n        token: response.token,\r\n        name: response.userResponse.username,\r\n        id: response.userResponse.id\r\n      }));\r\n      this.isAuth = true;\r\n      this.currentCustomerUsername = response.userResponse.username;\r\n    }), catchError(this.handleError.bind(this)));\r\n  }\r\n\r\n  logoutConfirm() {\r\n    this.logoutModalIsOpen = true;\r\n  }\r\n\r\n  logout() {\r\n    this.logoutModalIsOpen = false;\r\n    this.isAuth = false;\r\n    localStorage.setItem('currentUser', null);\r\n  }\r\n\r\n  isAuthenticated(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      resolve(this.isAuth);\r\n    });\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    const {message} = error.error;\r\n    this.errorMessage = message;\r\n    return throwError(error);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {\n  Charity,\n  Customer,\n  CustomerInfo,\n  Donate,\n  LoginRequest,\n  LoginResponse,\n  MessageResponse,\n  ProfileInfo,\n  RegisterResponse,\n  Transaction\n} from '../interfaces/interfaces';\nimport {catchError} from 'rxjs/operators';\n\n\n@Injectable({providedIn: 'root'})\nexport class HttpService {\n  url = 'http://54.174.196.3:8080/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  registerCustomer(customer: Customer): Observable<RegisterResponse> {\n    return this.http.post<RegisterResponse>(`${this.url}/auth/register`, customer)\n      .pipe(catchError(error => {\n        return throwError(error);\n      }));\n  }\n\n  loginCustomer(customer: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(`${this.url}/auth/login`, customer)\n      .pipe(catchError(error => {\n        return throwError(error);\n      }));\n  }\n\n\n  getCharities(): Observable<Charity[]> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.get<Charity[]>(`${this.url}/charities`, {headers});\n  }\n\n  getAllCharitiesByStatus(status: string): Observable<Charity[]> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.get<Charity[]>(`${this.url}/charities/${status}`, {headers});\n  }\n\n  getCurrentCustomerCharitiesByStatus(status: string): Observable<Charity[]> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.get<Charity[]>(`${this.url}/charities/currentUser/${status}`, httpOptions);\n  }\n\n  getCharity(id: number): Observable<Charity> {\n    const url = `${this.url}/charities/get/${id}`;\n    return this.http.get<Charity>(url);\n  }\n\n  addCharity(data: string, file: File): Observable<MessageResponse> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('object', data);\n    const url = `${this.url}/charities/add`;\n    return this.http.post<MessageResponse>(url, formData, httpOptions);\n  }\n\n  ownedByCurrentCustomer(charityId: number): Observable<boolean> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/user/charity/${charityId}`;\n    return this.http.get<boolean>(url, httpOptions);\n  }\n\n  currentCustomerVolunteerCharityById(charityId: number): Observable<boolean> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/user/isVolunteer/${charityId}`;\n    return this.http.get<boolean>(url, httpOptions);\n  }\n\n  donate(donate: Donate): Observable<MessageResponse> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/user/donate`;\n    return this.http.post<MessageResponse>(url, donate, httpOptions);\n  }\n\n  volunteer(charityId: number): Observable<MessageResponse> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/user/volunteer/${charityId}`;\n    return this.http.get<MessageResponse>(url, httpOptions);\n  }\n\n  delete(charityId: number): Observable<MessageResponse> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/charities/${charityId}`;\n    return this.http.delete<MessageResponse>(url, httpOptions);\n  }\n\n  recommendedAmountOfDonate(charityId: number): Observable<number> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/charities/recommendedAmount/${charityId}`;\n    return this.http.get<number>(url, httpOptions);\n  }\n\n  customerInfo(): Observable<ProfileInfo> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`\n      })\n    };\n\n    const url = `${this.url}/user/customerInfo`;\n    return this.http.get<ProfileInfo>(url, httpOptions);\n  }\n\n  getCharitiesCurrentCustomerIsVolunteer(): Observable<Charity[]> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const url = `${this.url}/user/charitiesTakePartVolunteer`;\n    return this.http.get<Charity[]>(url, httpOptions);\n  }\n\n  getCharitiesCurrentCustomerDonater(): Observable<Charity[]> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const url = `${this.url}/user/charitiesDonater`;\n    return this.http.get<Charity[]>(url, httpOptions);\n  }\n\n  getCharitiesCurrentCustomerOwner(): Observable<Charity[]> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const url = `${this.url}/user/charities`;\n    return this.http.get<Charity[]>(url, httpOptions);\n  }\n\n  getTransactions(): Observable<Transaction[]> {\n    const info: CustomerInfo = JSON.parse(localStorage.getItem('currentUser'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${info.token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const url = `${this.url}/user/transactions`;\n    return this.http.get<Transaction[]>(url, httpOptions);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Charity} from '../../interfaces/interfaces';\r\n\r\n@Pipe({\r\n  name: 'searchCharities'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(charities: Charity[], search = ''): Charity[] {\r\n    if (!search.trim()) {\r\n      return charities;\r\n    }\r\n    return charities.filter(charity => {\r\n      return charity.title.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}